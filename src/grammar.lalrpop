use std::str::FromStr;
use crate::ast::{Item, Value};

grammar;

pub Main: Vec<Item> = {
	<ItemDecl+>
}

pub ItemDecl: Item = {
    <uid:Uid?> <ident:Ident> <value:Value> ";" => Item { uid, ident, value: value },
	<uid:Uid?> <ident:Ident> "{" <value:Main?> "}" => Item { uid, ident, value: Value::List(value.unwrap_or_default()) },
}

Value: Value = {
    Num => Value::Int(<>),
	Ident => Value::Ident(<>),
    String => Value::String(<>),
}

Num: i32 = {
    r"[0-9]+" => i32::from_str(<>).unwrap()
}

Uid: String = {
    "#" <Ident> => <>
}

Ident: String = {
	r"[a-zA-Z_][a-zA-Z_0-9]*" => <>.to_string()
}

String: String = {
	r#""[^"]*""# => String::from(&<>[1..<>.len()-1])
}
